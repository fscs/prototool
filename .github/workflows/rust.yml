name: Rust

on: [push]
            
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: test
        run: cargo test --verbose
  build:
    name: ${{ matrix.platform.target }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: prototool-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            bin: prototool-linux-amd64

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: prototool-amd64.exe
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            bin: prototool-aarch64.exe

          - os: macos-latest
            target: x86_64-apple-darwin
            bin: prototool-darwin-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            bin: prototool-darwin-aarch64
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v3
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--locked --release"
          strip: true
      - name: Rename binary (linux and macos)
        run: mv target/${{ matrix.platform.target }}/release/prototool target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
        if: matrix.platform.os != 'windows-latest'
          
      - name: Rename binary (windows)
        run: mv target/${{ matrix.platform.target }}/release/prototool.exe target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
        if: matrix.platform.os == 'windows-latest'
          
      - name: Release 
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
